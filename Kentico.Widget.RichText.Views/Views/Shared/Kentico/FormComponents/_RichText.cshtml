@using CMS.Helpers
@using Kentico.Components.Web.Mvc.FormComponents;
@using Kentico.Components.Web.Mvc.InlineEditors;

@model RichText

@{
    var editButtonText = ResHelper.GetString("Kentico.FormComponent.RichText.EditButton");
    var emptyFieldText = ResHelper.GetString("Kentico.FormComponent.RichText.EmptyFieldText");
    var infoText = ResHelper.GetString("Kentico.FormComponent.RichText.PreviewInfoText");
    var instanceId = $"{Html.IdFor(m => m.Value)}-wrapper";
}

<div id="@instanceId" class="ktc-rich-text-form-component">
    @{Html.Kentico().RichTextEditor(nameof(Model.Value));}
    <div class="ktc-preview">
        <div class="ktc-preview-box">
            <p class="ktc-info-text ktc-info-text--empty">@emptyFieldText</p>
            <p class="ktc-info-text">@infoText</p>
            <button type="button" class="ktc-btn ktc-btn-default">@editButtonText</button>
        </div>
    </div>
    <iframe class="ktc-form-control ktc-preview-frame"></iframe>
    @Html.TextBoxFor(m => m.Value, new { hidden = true, @class = "ktc-rich-text-value" })
</div>

<script>
(function () {
    var selector = document.getElementById("@instanceId");
    selector.dispatchEvent(new CustomEvent("Kentico.FormComponents.RichText.Initialize", {
        bubbles: true,
        detail: {
            html: "@Html.Raw(HttpUtility.JavaScriptStringEncode(Model.Value))",
        }
    }));
}());
</script>
